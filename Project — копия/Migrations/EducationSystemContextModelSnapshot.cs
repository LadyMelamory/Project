// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project;

namespace Project.Migrations
{
    [DbContext(typeof(EducationSystemContext))]
    partial class EducationSystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Project.Courses", b =>
                {
                    b.Property<int>("Idcourse")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDCourse")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountLessons")
                        .HasColumnType("int");

                    b.Property<int>("Idschool")
                        .HasColumnName("IDSchool")
                        .HasColumnType("int");

                    b.Property<int>("Idsubgect")
                        .HasColumnName("IDSubgect")
                        .HasColumnType("int");

                    b.Property<int>("Idteachers")
                        .HasColumnName("IDTeachers")
                        .HasColumnType("int");

                    b.Property<int>("NamberClass")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(3000)")
                        .HasMaxLength(3000);

                    b.HasKey("Idcourse")
                        .HasName("PK_Course");

                    b.HasIndex("Idschool");

                    b.HasIndex("Idsubgect");

                    b.HasIndex("Idteachers");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Project.Parents", b =>
                {
                    b.Property<int>("Idparent")
                        .HasColumnName("IDParent")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("NameFather")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NameMather")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PatronymicFather")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("PatronymicMather")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("PhoneFather")
                        .HasColumnType("nchar(12)")
                        .IsFixedLength(true)
                        .HasMaxLength(12);

                    b.Property<string>("PhoneMathe")
                        .HasColumnType("nchar(12)")
                        .IsFixedLength(true)
                        .HasMaxLength(12);

                    b.Property<string>("SurnameFather")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SurnameMather")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Idparent")
                        .HasName("PK_Parent_1");

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("Project.Pupils", b =>
                {
                    b.Property<int>("Idpupil")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDPupil")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Idparent")
                        .HasColumnName("IDParent")
                        .HasColumnType("int");

                    b.Property<int?>("Idschool")
                        .HasColumnName("IDSchool")
                        .HasColumnType("int");

                    b.Property<int>("NamberClass")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Patronymic")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Phone")
                        .HasColumnType("char(12)")
                        .IsFixedLength(true)
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Idpupil");

                    b.HasIndex("Idparent");

                    b.HasIndex("Idschool");

                    b.ToTable("Pupils");
                });

            modelBuilder.Entity("Project.School", b =>
                {
                    b.Property<int>("Idschool")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDSchool")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameSchool")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Idschool");

                    b.ToTable("School");
                });

            modelBuilder.Entity("Project.Subject", b =>
                {
                    b.Property<int>("Idsubject")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDSubject")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NamrSubject")
                        .IsRequired()
                        .HasColumnType("nchar(100)")
                        .IsFixedLength(true)
                        .HasMaxLength(100);

                    b.HasKey("Idsubject");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("Project.Teachers", b =>
                {
                    b.Property<int>("Idteacher")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDTeacher")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int?>("Idschool")
                        .HasColumnName("IDSchool")
                        .HasColumnType("int");

                    b.Property<int?>("Idsubject")
                        .HasColumnName("IDSubject")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Patronymic")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Phone")
                        .HasColumnType("char(12)")
                        .IsFixedLength(true)
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Idteacher");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("Project.Courses", b =>
                {
                    b.HasOne("Project.School", "IdschoolNavigation")
                        .WithMany("Courses")
                        .HasForeignKey("Idschool")
                        .HasConstraintName("FK_Courses_School")
                        .IsRequired();

                    b.HasOne("Project.Subject", "IdsubgectNavigation")
                        .WithMany("Courses")
                        .HasForeignKey("Idsubgect")
                        .HasConstraintName("FK_Courses_Subject")
                        .IsRequired();

                    b.HasOne("Project.Teachers", "IdteachersNavigation")
                        .WithMany("Courses")
                        .HasForeignKey("Idteachers")
                        .HasConstraintName("FK_Courses_Teachers")
                        .IsRequired();
                });

            modelBuilder.Entity("Project.Pupils", b =>
                {
                    b.HasOne("Project.Parents", "IdparentNavigation")
                        .WithMany("Pupils")
                        .HasForeignKey("Idparent")
                        .HasConstraintName("FK_Pupil_Parent");

                    b.HasOne("Project.School", "IdschoolNavigation")
                        .WithMany("Pupils")
                        .HasForeignKey("Idschool")
                        .HasConstraintName("FK_Pupils_School");
                });
#pragma warning restore 612, 618
        }
    }
}
